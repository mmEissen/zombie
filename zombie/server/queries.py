# Generated by psql2py

import psql2py_core as core
import dataclasses


class _activate_game:
    _STATEMENT = r"""
/*
Columns:
    null: null
*/
UPDATE games 
SET is_active = true
WHERE game_id = %(game_id)s
RETURNING null AS null
"""
    @dataclasses.dataclass
    class Row:
        null: object


    def __call__(
        self,
        *,
        game_id: int,
    ) -> list[Row]:
        """Columns:
        null: null"""
        params = {
            "game_id": game_id,
        }
        return [self.Row(*row) for row in core.execute(self._STATEMENT, params)]

activate_game = _activate_game()

class _deactivate_game:
    _STATEMENT = r"""
/*
Columns:
    null: null
*/
UPDATE games 
SET is_active = false
WHERE game_id = %(game_id)s
RETURNING null AS null
"""
    @dataclasses.dataclass
    class Row:
        null: object


    def __call__(
        self,
        *,
        game_id: int,
    ) -> list[Row]:
        """Columns:
        null: null"""
        params = {
            "game_id": game_id,
        }
        return [self.Row(*row) for row in core.execute(self._STATEMENT, params)]

deactivate_game = _deactivate_game()

class _get_active_game_id:
    _STATEMENT = r"""
SELECT game_id
FROM games
WHERE is_active
"""
    @dataclasses.dataclass
    class Row:
        pass
        game_id: int


    def __call__(
        self,
    ) -> list[Row]:
        """"""
        params = {
        }
        return [self.Row(*row) for row in core.execute(self._STATEMENT, params)]

get_active_game_id = _get_active_game_id()

class _insert_game:
    _STATEMENT = r"""
/*
Columns:
    game_id: bigint
*/
INSERT INTO games DEFAULT VALUES RETURNING game_id
"""
    @dataclasses.dataclass
    class Row:
        pass
        game_id: int


    def __call__(
        self,
    ) -> list[Row]:
        """Columns:
        game_id: bigint"""
        params = {
        }
        return [self.Row(*row) for row in core.execute(self._STATEMENT, params)]

insert_game = _insert_game()

class _insert_player:
    _STATEMENT = r"""
/*
Columns:
    player_id: bigint
*/
INSERT INTO players (game_id, name, nfc_id) 
VALUES ((SELECT game_id FROM games WHERE is_active), %(name)s, %(nfc_id)s) 
RETURNING player_id
"""
    @dataclasses.dataclass
    class Row:
        player_id: int


    def __call__(
        self,
        *,
        name: str,
        nfc_id: str,
    ) -> list[Row]:
        """Columns:
        player_id: bigint"""
        params = {
            "name": name,
            "nfc_id": nfc_id,
        }
        return [self.Row(*row) for row in core.execute(self._STATEMENT, params)]

insert_player = _insert_player()

